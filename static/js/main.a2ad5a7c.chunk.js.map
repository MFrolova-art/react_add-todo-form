{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","getUser","userId","usersFromServer","find","existedTodos","App","useState","setTitle","setUserId","isUserError","setUserError","isTitleError","setTitleError","allTodos","setTodos","newId","Math","max","action","method","onSubmit","event","preventDefault","newTodo","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a2ad5a7c.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ninterface Props {\n  user: User;\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    title,\n    user,\n    completed,\n  } = todo;\n\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo key={todo.id} todo={todo} />\n    ))}\n  </section>\n);\n","import React, { ChangeEvent, useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  // if there is no user with a given userId\n  return foundUser || null;\n}\n\nconst existedTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState('');\n  const [isUserError, setUserError] = useState(false);\n  const [isTitleError, setTitleError] = useState(false);\n  const [allTodos, setTodos] = useState(existedTodos);\n\n  let newId = Math.max(...existedTodos.map(todo => todo.id));\n\n  const createTodo = () => {\n    newId += 1;\n\n    return ({\n      id: newId,\n      title,\n      userId: +userId,\n      completed: false,\n      user: getUser(+userId),\n    });\n  };\n\n  const handleInput = (event: ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleError(false);\n  };\n\n  const handleSelect = (event: ChangeEvent<HTMLSelectElement>) => {\n    setUserId(event.target.value);\n    setUserError(false);\n  };\n\n  const handleAddTodoForm = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setTitleError(!title);\n    setUserError(!userId);\n\n    if (title && userId) {\n      const newTodo = createTodo();\n\n      setTodos([\n        ...allTodos,\n        newTodo,\n      ]);\n\n      setTitle('');\n      setUserId('');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleAddTodoForm}\n      >\n        <div className=\"field\">\n          <label>\n            <input\n              type=\"text\"\n              name=\"Title\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={handleInput}\n            />\n            {isTitleError && (\n              <span className=\"error\">Please enter a title</span>\n            )}\n          </label>\n        </div>\n\n        <div className=\"field\">\n          <label>\n            <select\n              name=\"User\"\n              data-cy=\"userSelect\"\n              id=\"userSelect\"\n              value={userId}\n              onChange={handleSelect}\n            >\n              <option\n                value=\"\"\n                disabled\n              >\n                Choose a user\n              </option>\n              {usersFromServer.map(user => (\n                <option\n                  key={user.id}\n                  value={user.id}\n                >\n                  {user.name}\n                </option>\n              ))}\n            </select>\n            {isUserError && (\n              <span className=\"error\">Please choose a user</span>\n            )}\n          </label>\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n      <TodoList todos={allTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}